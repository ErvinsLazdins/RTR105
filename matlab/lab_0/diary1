%-- 02/03/2020 08:24:22 AM --%
mkdir lab1
cd lab1
diary lab1_diary.m
%mērījumu datu apstrāde
%mērijumu dati:
%mainam spiegumu un mēram strāvu
Vm = [-1 0.3 1.5 2.5 3.2];
Im = [1.1 2.2 2.1 3.2 4.7]]*1e-3;
Im = [1.1 2.2 2.1 3.2 4.7]*1e-3;
plot(Vm,Im)
plot(Vm,Im'-o')
plot(Vm,Im,'-o')
%pielaikosim 2. kārtas polinomu
% y= ax^2+bx+c
%polyfit - meklē polinoma koeficientus
% C = polyfit(x,y,N)
% N - polinoma kārta
C = polyfit(Vm,Im,2)
% y = C(1)x^2+C(2)x+C(3)
%definēsim x ar mazāku soli
V = -1:0.01:3.2;
% vaiV = min(Vm):0.01:max(Vm);
V = min(Vm):0.01:max(Vm);
V = linspace(min(Vm),max(Vm),100);
%liekam x mūsu izteiksmē
I = C(1)*V.^2+C(2)*V+C(3);
plot(Vm,Im,'-o',V,I)
C = polyfit(Vm,Im,3)
V = -1:0.01:3.2;
I = C(1)*V.^3+C(2)*V.^2+C(3)*V+C(4);
plot(Vm,Im,'-o',V,I)
plot(Vm,Im,'o',V,I)
% to pašu var panākt arī sekojosi
C = polyfit(Vm,Im,3);
%izmantosim polyval funkciju, kas aprēķina polinoma vērtības
% I = C(1)*V.^3+C(2)*V.^2+C(3)*V+C(4);
% I = polyval(C,V);
% sintakse y = polyval(C,x);
plot(Vm,Im,'o',V,I)
% uzdevums - atkārtot to pašu ceturtai kārtai
C = polyfit(Vm,Im,3);
C = polyfit(Vm,Im,4);
I = polyval(C,V);
plot(Vm,Im,'o',V,I)
% ja pielaikotā polinoma kārta ir par vienu mazāka nekā grafikā dotie punkti
% ja pielaikotā polinoma kārta ir par vienu mazāka nekā grafikā doto punktu skaits
% tad plototā līkne iet tieši caur šiem punktiem
% to sauc par polinomiālo interpolāciju
% ja pielaikā polinoma kārta nav N-1, to sauc par polinomiālo aproksimāciju
%
% Uzdevums - atkārtot 1. kārtai
C = polyfit(Vm,Im,1);
I = polyval(C,V);
plot(Vm,Im,'o',V,I)
%
%% Mērījumu sērijas
% pieņemsim, ka mēs katrai sprieguma vērtībai strāvu nomērīsim 5 reizes
Vm = [-1 0.3 1.5 2.5 3.2];
Im = [1.1 2.2 2.1 3.2 4.7]*1e-3;
Vm = [-1 0.3 1.5 2.5 3.2];
Im = [1.1 2.2 2.1 3.2 4.7]*1e-3;
0.9 1.8 2.6 3.3 4.5;
Im = [1.1 2.2 2.1 3.2 4.7;
0.9 1.8 2.6 3.3 4.5;
1.0 2.0 2.4 3.4 4.3;
0.8 2.1 2.5 3.2 4.6;
0.9 1.9 2.3 3.2 4.4]
figure
plot(Vm,Im,'-o')
% Matlab zīmē matricas pa kolonnām
% bet mūsu dati bija ierakstīti pa rindām un sanāca nepareizs grafiks
% tāpēc jātransponē matrica
plot(Vm,Im','-o')
% Pielaikosim polinomu
% funkcija polifit strādās tikai ar vektoriem
% ir funkcija kas sasummē vektoru
% piemeram
A = [1 2 3 4 5];
sum(A)
sum(Im)
sum(Im)/5
% sum(Im)/5 aprēķina vidējo
sum(Im,2)
% sum(Im,2) otrais arguments norāda virzienu, kā summēt elementus
% 1 - summē elementus katra kolonā (default)
% 2 - summē elementus katra rinda
Ivid = mean(Im)
% pielaikosim polinomu
C = polyfit(Vm,Ivid,3)
V = linspace(min(min(Vm)),max(max(Vm)),100);
I = polyval(C,V);
%Uzdevums - attēlot grafiku ar aplīšiem (o) mērījumu datus
% ar * attēlot videjo vērtību
% ar '-' attēlot pielaikoto polinomu
plot(Vm,Im,'-o')
plot(C,'-')
plot(Ivid,'*')
plot(C,'-',Ivid,'*')
plot(C,'-')
hold
plot(C,'-',Ivid,'*')
plot(Ivid,'*')
plot(Vm,Im,'o')
plot(Vm,Im,'-o')
plot(Vm,Im','-o')
hold off
plot(Vm,Im','o'Vm,Ivid,'*',V,I)
plot(Vm,Im','o',Vm,Ivid,'*',V,I)
Inovirzwe = std(Im)
Inovirze = std(Im)
errorbar(Vn,Ivid,Inovirze)
errorbar(Vm,Ivid,Inovirze)
errorbar(Vm,Ivid,Inovirze,'.')
hold on
plot (V,I)
hold off
label
xlabel('U,V')
ylabel('I,mA')
title ('Strāvas atkarība no sprieguma')
legend('eksperimentālie dati','pielaikotais polinoms')
grid
ls
% datu nolasīšana no grafika
A = imread('bilde1.png');
B = imread('bilde2.png');
figure(1), image(A)
figure(2), image(B)
figure(2), image([500 800],[0 1],B)
figure(2), image([500 800],[1 0],B)
set(gca,'Ydir','normal')
figure(1), image(A)
%varam tagad nolasīt grafiku ar matlab
%izmantosim funkciju ginput(N)
[x,y] = ginput(10)
hold on, plot(x,y,'o')
diary off
ylabel('I,mA')
